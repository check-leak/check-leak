name: Build
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    build_libs:
      name: Build on ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
      runs-on:  ${{ matrix.os }}
      steps:
        - name: Prepare git
          run: git config --global core.autocrlf false
          if: startsWith(matrix.os, 'windows')

        - uses: actions/checkout@v3

        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: 11
            cache: 'maven'

        - uses: ilammy/msvc-dev-cmd@v1
          if: startsWith(matrix.os, 'windows')

        - name: mvn compile to generate source
          run: mvn enforcer:display-info clean install -DskipTests=true

        - name: Setup cmake
          uses: jwlawson/actions-setup-cmake@v1.13
          with:
            cmake-version: '3.16.x'
          if: ${{ startsWith(matrix.os, 'windows') == false}}

        - name: Use cmake
          run: cmake .; make
          if: ${{ startsWith(matrix.os, 'windows') == false}}

        - name: Compile JNI code in Windows
          run: |
            cd check-leak\src\main\c
            cl /I"%JAVA_HOME%\include" /I"%JAVA_HOME%\include\win32" /LD /Fe:checkleak.dll agent.c
            copy checkleak.dll ..\resources\platforms-lib\windows\checkleak.dll
          shell: cmd
          if: ${{ startsWith(matrix.os, 'windows') }}

        - name: Run Tests with Maven
          run: mvn -B clean verify
